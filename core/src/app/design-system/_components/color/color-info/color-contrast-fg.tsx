import type { FC } from 'react';
import {
  getColorCode,
  SEMANTIC_COLOR_VARIANTS,
} from '@/app/design-system/_utils/color';
import { ColorContrastUnit } from './color-contrast-unit';

export const ColorContrastFg: FC<{
  colorCode: string;
  colorCodeDark: string;
}> = ({ colorCode, colorCodeDark }) => {
  return (
    <div className="flex flex-wrap items-center gap-x-2 gap-y-4">
      <ColorContrastUnit
        colorCode={colorCode}
        colorCodeDark={colorCodeDark}
        contrastCode={getColorCode(SEMANTIC_COLOR_VARIANTS.base.bg.base.light)}
        contrastCodeDark={getColorCode(
          SEMANTIC_COLOR_VARIANTS.base.bg.base.dark,
        )}
        contrastName="base"
        variant="foreground"
      />
      <ColorContrastUnit
        colorCode={colorCode}
        colorCodeDark={colorCodeDark}
        contrastCode={getColorCode(
          SEMANTIC_COLOR_VARIANTS.base.bg.subtle.light,
        )}
        contrastCodeDark={getColorCode(
          SEMANTIC_COLOR_VARIANTS.base.bg.subtle.dark,
        )}
        contrastName="base-subtle"
        variant="foreground"
      />
      <ColorContrastUnit
        colorCode={colorCode}
        colorCodeDark={colorCodeDark}
        contrastCode={getColorCode(SEMANTIC_COLOR_VARIANTS.base.bg.mute.light)}
        contrastCodeDark={getColorCode(
          SEMANTIC_COLOR_VARIANTS.base.bg.mute.dark,
        )}
        contrastName="base-mute"
        variant="foreground"
      />
      <ColorContrastUnit
        colorCode={colorCode}
        colorCodeDark={colorCodeDark}
        contrastCode={getColorCode(
          SEMANTIC_COLOR_VARIANTS.base.bg.emphasize.light,
        )}
        contrastCodeDark={getColorCode(
          SEMANTIC_COLOR_VARIANTS.base.bg.emphasize.dark,
        )}
        contrastName="base-emphasize"
        variant="foreground"
      />
      <ColorContrastUnit
        colorCode={colorCode}
        colorCodeDark={colorCodeDark}
        contrastCode={getColorCode(
          SEMANTIC_COLOR_VARIANTS.base.bg.inverse.light,
        )}
        contrastCodeDark={getColorCode(
          SEMANTIC_COLOR_VARIANTS.base.bg.inverse.dark,
        )}
        contrastName="base-inverse"
        variant="foreground"
      />
      <ColorContrastUnit
        colorCode={colorCode}
        colorCodeDark={colorCodeDark}
        contrastCode={getColorCode(
          SEMANTIC_COLOR_VARIANTS.primitive.primary.bg.light,
        )}
        contrastCodeDark={getColorCode(
          SEMANTIC_COLOR_VARIANTS.primitive.primary.bg.dark,
        )}
        contrastName="primary"
        variant="foreground"
      />
      <ColorContrastUnit
        colorCode={colorCode}
        colorCodeDark={colorCodeDark}
        contrastCode={getColorCode(
          SEMANTIC_COLOR_VARIANTS.primitive.primary.bgSubtle.light,
        )}
        contrastCodeDark={getColorCode(
          SEMANTIC_COLOR_VARIANTS.primitive.primary.bgSubtle.dark,
        )}
        contrastName="primary-subtle"
        variant="foreground"
      />
      <ColorContrastUnit
        colorCode={colorCode}
        colorCodeDark={colorCodeDark}
        contrastCode={getColorCode(
          SEMANTIC_COLOR_VARIANTS.primitive.primary.bgMute.light,
        )}
        contrastCodeDark={getColorCode(
          SEMANTIC_COLOR_VARIANTS.primitive.primary.bgMute.dark,
        )}
        contrastName="primary-mute"
        variant="foreground"
      />
      <ColorContrastUnit
        colorCode={colorCode}
        colorCodeDark={colorCodeDark}
        contrastCode={getColorCode(
          SEMANTIC_COLOR_VARIANTS.primitive.primary.bgEmphasize.light,
        )}
        contrastCodeDark={getColorCode(
          SEMANTIC_COLOR_VARIANTS.primitive.primary.bgEmphasize.dark,
        )}
        contrastName="primary-emphasize"
        variant="foreground"
      />
      <ColorContrastUnit
        colorCode={colorCode}
        colorCodeDark={colorCodeDark}
        contrastCode={getColorCode(
          SEMANTIC_COLOR_VARIANTS.primitive.secondary.bg.light,
        )}
        contrastCodeDark={getColorCode(
          SEMANTIC_COLOR_VARIANTS.primitive.secondary.bg.dark,
        )}
        contrastName="secondary"
        variant="foreground"
      />
      <ColorContrastUnit
        colorCode={colorCode}
        colorCodeDark={colorCodeDark}
        contrastCode={getColorCode(
          SEMANTIC_COLOR_VARIANTS.primitive.secondary.bgSubtle.light,
        )}
        contrastCodeDark={getColorCode(
          SEMANTIC_COLOR_VARIANTS.primitive.secondary.bgSubtle.dark,
        )}
        contrastName="secondary-subtle"
        variant="foreground"
      />
      <ColorContrastUnit
        colorCode={colorCode}
        colorCodeDark={colorCodeDark}
        contrastCode={getColorCode(
          SEMANTIC_COLOR_VARIANTS.primitive.secondary.bgMute.light,
        )}
        contrastCodeDark={getColorCode(
          SEMANTIC_COLOR_VARIANTS.primitive.secondary.bgMute.dark,
        )}
        contrastName="secondary-mute"
        variant="foreground"
      />
      <ColorContrastUnit
        colorCode={colorCode}
        colorCodeDark={colorCodeDark}
        contrastCode={getColorCode(
          SEMANTIC_COLOR_VARIANTS.primitive.secondary.bgEmphasize.light,
        )}
        contrastCodeDark={getColorCode(
          SEMANTIC_COLOR_VARIANTS.primitive.secondary.bgEmphasize.dark,
        )}
        contrastName="secondary-emphasize"
        variant="foreground"
      />
      <ColorContrastUnit
        colorCode={colorCode}
        colorCodeDark={colorCodeDark}
        contrastCode={getColorCode(
          SEMANTIC_COLOR_VARIANTS.semantic.bg.info.light,
        )}
        contrastCodeDark={getColorCode(
          SEMANTIC_COLOR_VARIANTS.semantic.bg.info.dark,
        )}
        contrastName="info"
        variant="foreground"
      />
      <ColorContrastUnit
        colorCode={colorCode}
        colorCodeDark={colorCodeDark}
        contrastCode={getColorCode(
          SEMANTIC_COLOR_VARIANTS.semantic.bg.success.light,
        )}
        contrastCodeDark={getColorCode(
          SEMANTIC_COLOR_VARIANTS.semantic.bg.success.dark,
        )}
        contrastName="success"
        variant="foreground"
      />
      <ColorContrastUnit
        colorCode={colorCode}
        colorCodeDark={colorCodeDark}
        contrastCode={getColorCode(
          SEMANTIC_COLOR_VARIANTS.semantic.bg.warning.light,
        )}
        contrastCodeDark={getColorCode(
          SEMANTIC_COLOR_VARIANTS.semantic.bg.warning.dark,
        )}
        contrastName="warning"
        variant="foreground"
      />
      <ColorContrastUnit
        colorCode={colorCode}
        colorCodeDark={colorCodeDark}
        contrastCode={getColorCode(
          SEMANTIC_COLOR_VARIANTS.semantic.bg.error.light,
        )}
        contrastCodeDark={getColorCode(
          SEMANTIC_COLOR_VARIANTS.semantic.bg.error.dark,
        )}
        contrastName="error"
        variant="foreground"
      />
    </div>
  );
};
