import { ColorContrastUnit } from './color-contrast-unit';
import {
  SEMANTIC_COLOR_VARIANTS,
  getColorCode,
} from '@/app/design-system/_utils/color';
import { FC } from 'react';

export const ColorContrastBg: FC<{
  colorCode: string;
  colorCodeDark: string;
}> = ({ colorCode, colorCodeDark }) => {
  return (
    <div className="flex flex-wrap items-center gap-x-2 gap-y-4">
      <ColorContrastUnit
        colorCode={colorCode}
        colorCodeDark={colorCodeDark}
        contrastName="base"
        contrastCode={getColorCode(
          SEMANTIC_COLOR_VARIANTS.base.fg.base.light,
        )}
        contrastCodeDark={getColorCode(
          SEMANTIC_COLOR_VARIANTS.base.fg.base.dark,
        )}
        variant="background"
      />
      <ColorContrastUnit
        colorCode={colorCode}
        colorCodeDark={colorCodeDark}
        contrastName="subtle"
        contrastCode={getColorCode(
          SEMANTIC_COLOR_VARIANTS.base.fg.subtle.light,
        )}
        contrastCodeDark={getColorCode(
          SEMANTIC_COLOR_VARIANTS.base.fg.subtle.dark,
        )}
        variant="background"
      />
      <ColorContrastUnit
        colorCode={colorCode}
        colorCodeDark={colorCodeDark}
        contrastName="mute"
        contrastCode={getColorCode(
          SEMANTIC_COLOR_VARIANTS.base.fg.mute.light,
        )}
        contrastCodeDark={getColorCode(
          SEMANTIC_COLOR_VARIANTS.base.fg.mute.dark,
        )}
        variant="background"
      />
      <ColorContrastUnit
        colorCode={colorCode}
        colorCodeDark={colorCodeDark}
        contrastName="inverse"
        contrastCode={getColorCode(
          SEMANTIC_COLOR_VARIANTS.base.fg.inverse.light,
        )}
        contrastCodeDark={getColorCode(
          SEMANTIC_COLOR_VARIANTS.base.fg.inverse.dark,
        )}
        variant="background"
      />
      <ColorContrastUnit
        colorCode={colorCode}
        colorCodeDark={colorCodeDark}
        contrastName="primary"
        contrastCode={getColorCode(
          SEMANTIC_COLOR_VARIANTS.primitive.primary.fg.light,
        )}
        contrastCodeDark={getColorCode(
          SEMANTIC_COLOR_VARIANTS.primitive.primary.fg.dark,
        )}
        variant="background"
      />
      <ColorContrastUnit
        colorCode={colorCode}
        colorCodeDark={colorCodeDark}
        contrastName="secondary"
        contrastCode={getColorCode(
          SEMANTIC_COLOR_VARIANTS.primitive.secondary.fg.light,
        )}
        contrastCodeDark={getColorCode(
          SEMANTIC_COLOR_VARIANTS.primitive.secondary.fg.dark,
        )}
        variant="background"
      />
      <ColorContrastUnit
        colorCode={colorCode}
        colorCodeDark={colorCodeDark}
        contrastName="info"
        contrastCode={getColorCode(
          SEMANTIC_COLOR_VARIANTS.semantic.fg.info.light,
        )}
        contrastCodeDark={getColorCode(
          SEMANTIC_COLOR_VARIANTS.semantic.fg.info.dark,
        )}
        variant="background"
      />
      <ColorContrastUnit
        colorCode={colorCode}
        colorCodeDark={colorCodeDark}
        contrastName="success"
        contrastCode={getColorCode(
          SEMANTIC_COLOR_VARIANTS.semantic.fg.success.light,
        )}
        contrastCodeDark={getColorCode(
          SEMANTIC_COLOR_VARIANTS.semantic.fg.success.dark,
        )}
        variant="background"
      />
      <ColorContrastUnit
        colorCode={colorCode}
        colorCodeDark={colorCodeDark}
        contrastName="warning"
        contrastCode={getColorCode(
          SEMANTIC_COLOR_VARIANTS.semantic.fg.warning.light,
        )}
        contrastCodeDark={getColorCode(
          SEMANTIC_COLOR_VARIANTS.semantic.fg.warning.dark,
        )}
        variant="background"
      />
      <ColorContrastUnit
        colorCode={colorCode}
        colorCodeDark={colorCodeDark}
        contrastName="error"
        contrastCode={getColorCode(
          SEMANTIC_COLOR_VARIANTS.semantic.fg.error.light,
        )}
        contrastCodeDark={getColorCode(
          SEMANTIC_COLOR_VARIANTS.semantic.fg.error.dark,
        )}
        variant="background"
      />
    </div>
  );
};
